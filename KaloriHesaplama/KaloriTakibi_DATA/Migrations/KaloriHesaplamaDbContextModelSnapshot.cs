// <auto-generated />
using System;
using Kalori_DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kalori_DAL.Migrations
{
    [DbContext(typeof(KaloriHesaplamaDbContext))]
    partial class KaloriHesaplamaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KALORI.DATA.Entities.Kategori", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriId"));

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriId");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("KALORI.DATA.Entities.Kullanici", b =>
                {
                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Boy")
                        .HasColumnType("int");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DogumTarihi")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KayıtTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kilo")
                        .HasColumnType("int");

                    b.Property<bool>("KullanıcıTipi")
                        .HasColumnType("bit");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SifremiHatirla")
                        .HasColumnType("bit");

                    b.Property<string>("Soyisim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Yas")
                        .HasColumnType("int");

                    b.HasKey("Mail");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("KALORI.DATA.Entities.KullaniciOgun", b =>
                {
                    b.Property<int>("IslemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IslemId"));

                    b.Property<string>("KullaniciMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OgunId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("IslemId");

                    b.HasIndex("KullaniciMail");

                    b.HasIndex("OgunId");

                    b.ToTable("İslemler", (string)null);
                });

            modelBuilder.Entity("KALORI.DATA.Entities.Ogun", b =>
                {
                    b.Property<int>("OgunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OgunId"));

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OgunId");

                    b.ToTable("Ogunler");
                });

            modelBuilder.Entity("KALORI.DATA.Entities.OgunYemek", b =>
                {
                    b.Property<int>("IslemId")
                        .HasColumnType("int");

                    b.Property<int>("YemekId")
                        .HasColumnType("int");

                    b.Property<int>("Kalori")
                        .HasColumnType("int");

                    b.Property<decimal>("Porsiyon")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IslemId", "YemekId");

                    b.HasIndex("YemekId");

                    b.ToTable("Ogun-Yemek Tablosu", (string)null);
                });

            modelBuilder.Entity("KALORI.DATA.Entities.Yemek", b =>
                {
                    b.Property<int>("YemekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YemekId"));

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kalori")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<byte[]>("YemekResmi")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("YemekId");

                    b.HasIndex("KategoriId");

                    b.ToTable("Yemekler");
                });

            modelBuilder.Entity("KALORI.DATA.Entities.KullaniciOgun", b =>
                {
                    b.HasOne("KALORI.DATA.Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciOgunleri")
                        .HasForeignKey("KullaniciMail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KALORI.DATA.Entities.Ogun", "Ogun")
                        .WithMany("KullaniciOgunleri")
                        .HasForeignKey("OgunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Ogun");
                });

            modelBuilder.Entity("KALORI.DATA.Entities.OgunYemek", b =>
                {
                    b.HasOne("KALORI.DATA.Entities.KullaniciOgun", "KullaniciOgun")
                        .WithMany("OgunYemek")
                        .HasForeignKey("IslemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KALORI.DATA.Entities.Yemek", "Yemek")
                        .WithMany("OgunYemekleri")
                        .HasForeignKey("YemekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KullaniciOgun");

                    b.Navigation("Yemek");
                });

            modelBuilder.Entity("KALORI.DATA.Entities.Yemek", b =>
                {
                    b.HasOne("KALORI.DATA.Entities.Kategori", "Kategori")
                        .WithMany("Yemekler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("KALORI.DATA.Entities.Kategori", b =>
                {
                    b.Navigation("Yemekler");
                });

            modelBuilder.Entity("KALORI.DATA.Entities.Kullanici", b =>
                {
                    b.Navigation("KullaniciOgunleri");
                });

            modelBuilder.Entity("KALORI.DATA.Entities.KullaniciOgun", b =>
                {
                    b.Navigation("OgunYemek");
                });

            modelBuilder.Entity("KALORI.DATA.Entities.Ogun", b =>
                {
                    b.Navigation("KullaniciOgunleri");
                });

            modelBuilder.Entity("KALORI.DATA.Entities.Yemek", b =>
                {
                    b.Navigation("OgunYemekleri");
                });
#pragma warning restore 612, 618
        }
    }
}
